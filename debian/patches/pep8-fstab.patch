From 79c99b9a12377fc3d0519295b88b290b2efdffd0 Mon Sep 17 00:00:00 2001
From: Alf Gaida <agaida@siduction.org>
Date: Wed, 29 Mar 2017 19:03:56 +0200
Subject: [PATCH] Fixed pep8 whining for module fstab

---
 src/modules/fstab/main.py | 28 +++++++++++++++-------------
 1 file changed, 15 insertions(+), 13 deletions(-)

diff --git a/src/modules/fstab/main.py b/src/modules/fstab/main.py
index 622f55c..876c9ea 100644
--- a/src/modules/fstab/main.py
+++ b/src/modules/fstab/main.py
@@ -32,7 +32,7 @@
 # be used with UUID= as a more robust way to name devices that works even if
 # disks are added and removed. See fstab(5).
 #
-# <file system>                           <mount point>  <type>  <options>  <dump>  <pass>"""
+# <file system>             <mount point>  <type>  <options>  <dump>  <pass>"""
 
 CRYPTTAB_HEADER = """# /etc/crypttab: mappings for encrypted partitions.
 #
@@ -46,7 +46,7 @@
 #       to encrypted swap, which should be set up with mkinitcpio-openswap
 #       for resume support.
 #
-# <name>               <device>                                     <password> <options>"""
+# <name>               <device>                         <password> <options>"""
 
 # Turn Parted filesystem names into fstab names
 FS_MAP = {
@@ -168,7 +168,7 @@ def print_crypttab_line(self, dct, file=None):
                                            dct["device"],
                                            dct["password"],
                                            dct["options"],
-                                          )
+                                           )
 
         print(line, file=file)
 
@@ -181,8 +181,10 @@ def generate_fstab(self):
             print(FSTAB_HEADER, file=fstab_file)
 
             for partition in self.partitions:
-                # Special treatment for a btrfs root with @ and @home subvolumes
-                if partition["fs"] == "btrfs" and partition["mountPoint"] == "/":
+                # Special treatment for a btrfs root with @ and @home
+                # subvolumes
+                if (partition["fs"] == "btrfs"
+                   and partition["mountPoint"] == "/"):
                     output = subprocess.check_output(['btrfs',
                                                       'subvolume',
                                                       'list',
@@ -216,7 +218,7 @@ def generate_fstab(self):
                            fs="tmpfs",
                            options="defaults,noatime,mode=1777",
                            check=0,
-                          )
+                           )
                 self.print_fstab_line(dct, file=fstab_file)
 
     def generate_fstab_line_info(self, partition):
@@ -252,8 +254,8 @@ def generate_fstab_line_info(self, partition):
             return dict(device="UUID=" + partition["uuid"],
                         mount_point=mount_point,
                         fs=filesystem,
-                        options=",".join(["subvol={}".format(partition["subvol"]),
-                                          options]),
+                        options=",".join(["subvol=" + partition["subvol"]],
+                                         options),
                         check=check,
                         )
 
@@ -266,11 +268,11 @@ def generate_fstab_line_info(self, partition):
 
     def print_fstab_line(self, dct, file=None):
         """ Prints line to '/etc/fstab' file. """
-        line = "{:41} {:<14} {:<7} {:<10} 0       {}".format(dct["device"],
-                                                             dct["mount_point"],
-                                                             dct["fs"],
-                                                             dct["options"],
-                                                             dct["check"],
+        line = "{:41} {:<14} {:<7} {:<10} 0      {}".format(dct["device"],
+                                                            dct["mount_point"],
+                                                            dct["fs"],
+                                                            dct["options"],
+                                                            dct["check"],
                                                             )
         print(line, file=file)
 
